const ELEMENTS = 
{
	DEFAULT_COLOR : [0.0,1.0,0.1], // GREEN
	/**
	 * PUBLIC FUNCTIONS TO ACCESS PHYSICAL VALUES OF ELEMENTS
	 */
	isMetal : function (element)
	{
		var aNum = ELEMENTS.elements[myElement][0]; // get Atomic Number
		var metals = [3,4,11,12,13,19,20,37,38,55,56,87,88,
		              21,22,23,24,25,26,27,28,29,30,31,39,
		              40,41,42,43,44,45,46,47,48,49,50,
		              72,73,74,75,76,77,78,79,80,81,82,83];
		return containsKey(metals,aNum);
	},
	
	isHalogen : function (element)
	{
		var aNum = ELEMENTS.elements[myElement][0]; // get Atomic Number
		var halo = [9,17,35,53,85];
	},
	
	isHeteroAtom : function(element)
	{
		if(element == "O" || element == "N"){return true;}
		return false;
	},
	
	
	getAtomicNumber : function (myElement)
	{
		return ELEMENTS.elements[myElement][0];
	},
	getCovalentRadius : function (myElement)
	{
		return ELEMENTS.elements[myElement][4];
	},
	getVdwRadius : function (myElement)
	{
		return ELEMENTS.elements[myElement][3];
	},
	getPeriod : function (myElement)
	{
		return ELEMENTS.elements[myElement][1];
	},
	getValenceElectron : function (myElement)
	{
		return ELEMENTS.elements[myElement][5];
	},
	getMinValence : function (myElement)
	{
		return ELEMENTS.elements[myElement][6];
	},
	getMaxValence : function (myElement)
	{
		return ELEMENTS.elements[myElement][7];
	},
	getCommonValence : function (myElement)
	{
		return ELEMENTS.elements[myElement][8];
	},
	getMaxCovalentValence : function (myElement)
	{
		return ELEMENTS.elements[myElement][9];
	},
	getMass : function (myElement)
	{
		return ELEMENTS.elements[myElement][10];
	},
	getCoreElectron : function (myElement)
	{
		return ELEMENTS.elements[myElement][11];
	},
	getCommonOxidationState : function (myElement)
	{
		return ELEMENTS.elements[myElement][12];
	},
	getAllOxidationState : function (myElement)
	{
		return ELEMENTS.elements[myElement][13];
	},
	getElectronegativity : function (myElement)
	{
		return ELEMENTS.elements[myElement][14];
	},
	getColor : function (myElement)
	{
		if (ELEMENTS.elements[myElement][15] == null) {
			return ELEMENTS.DEFAULT_COLOR;
		}
		else
		{
			return ELEMENTS.elements[myElement][15];
		}
	},
	
	// most frequently used elements first
	/**
	 * ORDER :
	 * Element : [
	 		int atomicNumber,
            int period,
            int hillOrder,
            float VDWRadius,
            float covalentRadius,
            int valenceElectronCount,
            int minimumValence,
            int maximumValence,
            int commonValence,
            int maximumCovalentValence,
            float atomicMass,
            int coreElectronCount,
            int oxidationState,
            int[ allOxidationStates,
            float paulingElectronegativity
	 */
	elements : {
		H : [1, 1, 39, 1.10, 0.32, 1, 1, 1, 1, 1, 1.008, 0, 1, [1], 2.20, [0.7,0.7,0.7]],
		C : [6, 2, 0, 1.55, 0.77, 4, 4, 4, 4, 4, 12.011, 2, -4, [-4,-3,-2,0,-1,1,2,3,4], 2.55,[0.2, 0.2, 0.2]],
		N :[7, 2, 57, 1.40, 0.75, 5, 2, 5, 3, 4, 14.007, 2, -3, [-3,-2,-1,0,1,2,3,4,5], 3.04,[0.3, 0.3, 1.0]],
		O :[8, 2, 65, 1.35, 0.73, 6, 1, 2, 2, 2, 16.000, 2, -2, [-2,-1,0,1,2], 3.44,[0.9, 0.3, 0.3]],
		D :[1, 1, 27, 1.10, 0.32, 1, 1, 1, 1, 1, 1.008, 0, 1, [0,1], 2.20], // need to edit properties!
		T :[1, 1, 90, 1.10, 0.32, 1, 1, 1, 1, 1, 1.008, 0, 1, [0,1], 2.20], // need to edit properties!
		He :[2, 1, 40, 2.20, 1.60, 2, 0, 12, 0, 0, 4.003, 2, 0, [0], 0.0], // electroneg not reported
		Li :[3, 2, 50, 1.22, 1.34, 1, 0, 12, 0, 1, 6.940, 2, 1, [0,1], 0.98],
		Be :[4, 2, 12, 0.63, 0.90, 2, 0, 12, 2, 2, 9.012, 2, 2, [0,1,2], 1.57],
		B :[5, 2, 10, 1.55, 0.82, 3, 3, 5, 3, 4, 10.810, 2, 3, [0,1,2,3], 2.04],
		F :[9, 2, 32, 1.30, 0.72, 7, 0, 1, 1, 1, 18.998, 2, -1, [-1,0,1], 3.98],
		Ne :[10, 2, 61, 2.02, 1.12, 8, 0, 12, 0, 0, 20.170, 10, 0, [], 0.00], // electroneg not reported
		Na :[11, 3, 58, 2.20, 1.54, 1, 0, 1, 0, 0, 22.990, 10, 1, [-1,0,1], 0.93],
		Mg :[12, 3, 54, 1.50, 1.30, 2, 0, 2, 0, 2, 24.305, 10, 2, [0,1,2], 1.31],
		Al :[13, 3, 4, 1.50, 1.18, 3, 0, 5, 0, 4, 26.982, 10, 3, [0,1,2,3], 1.61],
		Si :[14, 3, 86, 2.20, 1.11, 4, 4, 4, 4, 4, 28.086, 10, 4, [-4,-3,-2,-1,0,1,2,3,4], 1.90],
		P :[15, 3, 67, 1.88, 1.06, 5, 3, 5, 3, 5, 30.974, 10, 5, [-3,-2,-1,0,1,2,3,4,5], 2.19,[1.0, 0.45, 0.0]],
		S :[16, 3, 82, 1.81, 1.02, 6, 2, 6, 2, 6, 32.060, 10, -2, [-2,-1,0,1,2,3,4,5,6], 2.58,[1.0, 0.85, 0.0]],
		Cl :[17, 3, 21, 1.75, 0.99, 7, 0, 1, 1, 1, 35.453, 10, -1, [-1,0,1,2,3,4,5,6,7], 3.16],
		Ar :[18, 4, 6, 2.77, 1.54, 8, 0, 12, 0, 0, 39.948, 18, 0, [0], 0.00], // electroneg not reported
		K :[19, 4, 47, 2.39, 1.96, 1, 0, 12, 0, 0, 39.102, 18, 1, [-1,0,1], 0.82],
		Ca :[20, 4, 17, 1.95, 1.74, 2, 0, 2, 0, 0, 40.080, 18, 2, [0,1,2], 1.00],
		Sc :[21, 4, 84, 1.32, 1.44, 3, 0, 12, 3, 0, 44.956, 18, 3, [0,1,2,3], 1.36],
		Ti :[22, 4, 96, 1.95, 1.36, 4, 2, 4, 3, 4, 47.880, 18, 4, [-1,0,1,2,3,4], 1.54],
		V :[23, 4, 100, 1.06, 1.25, 5, 0, 12, 3, 0, 50.040, 18, 5, [-1,0,1,2,3,4,5], 1.63],
		Cr :[24, 4, 24, 1.13, 1.27, 6, 0, 12, 2, 0, 51.996, 18, 3, [-2,-1,0,1,2,3,4,5,6], 1.66],
		Mn :[25, 4, 55, 1.19, 1.39, 7, 0, 12, 0, 0, 54.938, 18, 2, [-3,-2,-1,0,1,2,3,4,5,6,7], 1.55],
		Fe :[26, 4, 33, 1.95, 1.25, 3, 0, 8, 0, 0, 55.847, 18, 3, [-2,-1,0,1,2,3,4,5,6], 1.83],
		Co :[27, 4, 23, 1.13, 1.26, 3, 0, 12, 0, 0, 58.933, 18, 2, [-1,0,1,2,3,4,5], 1.88],
		Ni :[28, 4, 62, 1.24, 1.21, 3, 0, 12, 0, 0, 58.710, 18, 2, [-1,0,1,2,3,4], 1.91],
		Cu :[29, 4, 26, 1.15, 1.38, 2, 0, 4, 0, 0, 63.546, 18, 2, [0,1,2,3,4], 1.90],
		Zn :[30, 4, 106, 1.15, 1.31, 2, 0, 2, 0, 0, 65.380, 18, 2, [0,1,2], 1.65],
		Ga :[31, 4, 36, 1.55, 1.26, 3, 1, 4, 2, 4, 69.720, 28, 3, [0,1,2,3], 1.81],
		Ge :[32, 4, 38, 2.72, 1.22, 4, 0, 12, 4, 4, 72.590, 28, 4, [-4,-3,-2,-1,0,1,2,3,4], 2.01],
		As :[33, 4, 7, 0.83, 1.19, 5, 0, 12, 3, 5, 74.922, 28, -3, [-3,0,1,2,3,5], 2.18],
		Se :[34, 4, 85, 0.90, 1.16, 6, 0, 12, 2, 6, 78.960, 28, 4, [-2,0,1,2,4,6], 2.55,[1.0, 0.75, 0.2]],
		Br :[35, 4, 15, 1.95, 1.14, 7, 0, 1, 1, 1, 79.904, 28, -1, [-1,0,1,2,3,4,5,7], 2.96],
		Kr :[36, 4, 48, 1.90, 1.60, 8, 0, 12, 0, 0, 83.800, 28, 0, [0,2], 3.00],
		Rb :[37, 5, 77, 2.65, 2.11, 1, 0, 12, 0, 0, 85.467, 36, 1, [-1,0,1], 0.82],
		Sr :[38, 5, 89, 2.02, 1.92, 2, 0, 12, 2, 0, 87.620, 36, 2, [0,1,2], 0.95],
		Y :[39, 5, 103, 1.61, 1.62, 3, 0, 12, 3, 0, 88.806, 36, 3, [0,1,2,3], 1.22],
		Zr :[40, 5, 105, 1.42, 1.48, 4, 0, 12, 4, 0, 91.220, 36, 4, [0,1,2,3,4], 1.33],
		Nb :[41, 5, 59, 1.33, 1.37, 5, 0, 12, 3, 0, 92.906, 36, 5, [-1,0,1,2,3,4,5], 1.60],
		Mo :[42, 5, 56, 1.75, 1.45, 6, 1, 6, 3, 0, 95.940, 36, 6, [-2,-1,0,1,2,3,4,5,6], 2.16],
		Tc :[43, 5, 93, 1.80, 1.56, 7, 0, 12, 6, 0, 98.910, 36, 7, [-3,-1,0,1,2,3,4,5,6,7], 1.90],
		Ru :[44, 5, 81, 1.20, 1.26, 8, 0, 12, 3, 0, 101.070, 36, 4, [-2,0,1,2,3,4,5,6,7,8], 2.20],
		Rh :[45, 5, 79, 1.22, 1.35, 4, 0, 12, 3, 0, 102.906, 36, 3, [-1,0,1,2,3,4,5,6], 2.28],
		Pd :[46, 5, 70, 1.44, 1.31, 4, 0, 12, 2, 0, 106.400, 36, 2, [0,1,2,4], 2.20],
		Ag :[47, 5, 3, 1.55, 1.53, 1, 0, 6, 0, 0, 107.868, 36, 1, [0,1,2,3,4], 1.93],
		Cd :[48, 5, 18, 1.75, 1.48, 2, 0, 12, 0, 0, 112.400, 36, 2, [0,1,2], 1.69],
		In :[49, 5, 45, 1.46, 1.44, 3, 0, 12, 3, 0, 114.820, 46, 3, [0,1,2,3], 1.78],
		Sn :[50, 5, 88, 1.67, 1.41, 4, 0, 12, 2, 4, 118.690, 46, 4, [-4,0,2,4], 1.96],
		Sb :[51, 5, 83, 1.12, 1.38, 5, 0, 12, 4, 5, 121.750, 46, -3, [-3,0,3,5], 2.05],
		Te :[52, 5, 94, 1.26, 1.35, 6, 0, 12, 2, 6, 127.600, 46, 4, [-2,0,2,4,5,6], 2.10],
		I :[53, 5, 44, 2.15, 1.33, 7, 1, 1, 1, 1, 126.905, 46, -1, [-1,0,1,3,4,5,7], 2.66],
		Xe :[54, 5, 102, 2.10, 1.70, 8, 0, 12, 0, 0, 131.300, 46, 0, [0,1,2,4,6,8], 2.60],
		Cs :[55, 6, 25, 3.01, 2.25, 1, 0, 12, 0, 0, 132.905, 54, 1, [-1,0,1], 0.79],
		Ba :[56, 6, 11, 2.41, 1.98, 2, 0, 12, 0, 0, 137.340, 54, 2, [0,2], 0.89],
		La :[57, 6, 49, 1.83, 1.95, 3, 0, 12, 3, 0, 138.905, 54, 3, [0,2,3], 1.10],
		Ce :[58, 6, 19, 1.86, 1.03, 4, 0, 12, 3, 0, 140.120, 54, 3, [0,2,3,4], 1.12],
		Pr :[59, 6, 73, 1.62, 0.90, 4, 0, 12, 3, 0, 140.908, 55, 3, [0,2,3,4], 1.13],
		Nd :[60, 6, 60, 1.79, 0.99, 3, 0, 12, 3, 0, 144.240, 56, 3, [0,2,3,4], 1.14],
		Pm :[61, 6, 71, 1.76, 0.98, 3, 0, 12, 3, 0, 145.000, 58, 3, [0,2,3], 1.13],
		Sm :[62, 6, 87, 1.74, 0.96, 3, 0, 12, 2, 0, 150.400, 59, 3, [0,2,3], 1.17],
		Eu :[63, 6, 31, 1.96, 1.09, 3, 0, 12, 2, 0, 151.960, 60, 3, [0,2,3], 1.20],
		Gd :[64, 6, 37, 1.69, 0.94, 3, 0, 12, 3, 0, 157.250, 61, 3, [0,1,2,3], 1.20],
		Tb :[65, 6, 92, 1.66, 0.92, 4, 0, 12, 3, 0, 158.925, 61, 3, [0,1,2,3,4], 1.10],
		Dy :[66, 6, 28, 1.63, 0.91, 3, 0, 12, 3, 0, 162.500, 62, 3, [0,2,3,4], 1.22],
		Ho :[67, 6, 43, 1.61, 0.89, 3, 0, 12, 3, 0, 164.930, 64, 3, [0,2,3], 1.23],
		Er :[68, 6, 29, 1.59, 0.88, 3, 0, 12, 3, 0, 167.260, 65, 3, [0,2,3], 1.24],
		Tm :[69, 6, 98, 1.57, 0.87, 3, 0, 12, 3, 0, 168.934, 66, 3, [0,2,3,4], 1.25],
		Yb :[70, 6, 104, 1.54, 0.86, 3, 0, 12, 2, 0, 173.040, 67, 3, [0,2,3], 1.10],
		Lu :[71, 6, 52, 1.53, 0.85, 3, 0, 12, 3, 0, 174.970, 68, 3, [0,3], 1.27],
		Hf :[72, 6, 41, 1.40, 1.58, 4, 0, 12, 4, 0, 178.490, 68, 4, [0,2,3,4], 1.30],
		Ta :[73, 6, 91, 1.22, 1.38, 5, 0, 12, 5, 0, 180.850, 68, 5, [-1,0,2,3,4,5], 1.50],
		W :[74, 6, 101, 1.26, 1.46, 6, 0, 12, 6, 0, 183.850, 68, 6, [-2,-1,0,1,2,3,4,5,6], 2.36],
		Re :[75, 6, 78, 1.30, 1.59, 7, 0, 12, 4, 0, 186.200, 68, 7, [-3,-1,0,1,2,3,4,5,6,7], 1.90],
		Os :[76, 6, 66, 1.58, 1.28, 8, 0, 12, 2, 0, 190.200, 68, 4, [-2,-1,0,1,2,3,4,5,6,7,8], 2.20],
		Ir :[77, 6, 46, 1.22, 1.37, 6, 0, 12, 3, 0, 192.220, 68, 4, [-3,-1,0,1,2,3,4,5,6,8], 2.20],
		Pt :[78, 6, 74, 1.55, 1.28, 4, 0, 6, 0, 0, 195.090, 68, 4, [-2,-1,0,1,2,3,4,5,6], 2.28],
		Au :[79, 6, 9, 1.45, 1.44, 3, 0, 6, 0, 0, 196.967, 68, 3, [-1,0,1,2,3,5], 2.54],
		Hg :[80, 6, 42, 1.55, 1.32, 2, 0, 12, 1, 2, 200.59, 78, 1, [0,1,2,4], 2.00],
		Tl :[81, 6, 97, 1.96, 1.45, 3, 0, 12, 1, 3, 204.3833, 78, 1, [-1,0,1,3], 1.62],
		Pb :[82, 6, 69, 2.16, 1.47, 4, 0, 12, 2, 4, 207.200, 78, 2, [-4,0,2,4], 2.33],
		Bi :[83, 6, 13, 1.73, 1.46, 5, 0, 12, 3, 3, 208.981, 78, 3, [-3,0,1,3,5], 2.20],
		Po :[84, 6, 72, 1.21, 0.67, 6, 0, 12, 4, 2, 209.000, 78, 4, [-2,0,2,4,5,6], 2.0],
		At :[85, 6, 8, 1.12, 0.62, 7, 0, 12, 1, 1, 210.000, 78, -1, [-1,0,1,3,5,7], 2.20],
		Rn :[86, 6, 80, 2.30, 1.90, 8, 0, 12, 0, 0, 222.000, 78, 0, [0,2,6], 0.0], // electroneg not reported
		Fr :[87, 7, 35, 3.24, 1.80, 1, 0, 12, 0, 0, 223.000, -1, 1, [0,1], 0.70],
		Ra :[88, 7, 76, 2.57, 1.43, 2, 0, 12, 2, 0, 226.000, -1, 2, [0,2], 0.9],
		Ac :[89, 7, 2, 2.12, 1.18, 3, 0, 12, 4, 0, 227.000, -1, 3, [0,2,3], 1.1],
		Th :[90, 7, 95, 1.84, 1.02, 4, 0, 12, 1, 0, 232.038, -1, 4, [0,2,3,4], 1.30],
		Pa :[91, 7, 68, 1.60, 0.89, 5, 0, 12, 4, 0, 231.036, -1, 5, [0,2,3,4,5], 1.50],
		U :[92, 7, 99, 1.75, 0.97, 6, 0, 12, 4, 0, 238.029, -1, 6, [0,2,3,4,5,6], 1.38],
		Np :[93, 7, 64, 1.71, 0.95, 6, 0, 12, 4, 0, 237.048, -1, 5, [0,3,4,5,6,7], 1.36],
		Pu :[94, 7, 75, 1.67, 0.93, 6, 0, 12, 3, 0, 244.000, -1, 4, [0,3,4,5,6,7,8], 1.28],
		Am :[95, 7, 5, 1.66, 0.92, 6, 0, 12, 3, 0, 243.000, -1, 3, [0,2,3,4,5,6,7], 1.13],
		Cm :[96, 7, 22, 1.65, 0.91, 3, 0, 12, 3, 0, 248.000, -1, 3, [0,3,4], 1.28],
		Bk :[97, 7, 14, 1.64, 0.90, 4, 0, 12, 3, 0, 247.000, -1, 3, [0,2,3,4], 1.30],
		Cf :[98, 7, 20, 1.63, 0.89, 3, 0, 12, 4, 0, 251.000, -1, 3, [0,2,3,4], 1.30],
		Es :[99, 7, 30, 1.62, 0.88, -1, 0, 12, 4, 0, 254.000, -1, 3, [0,2,3], 1.30],
		Fm :[100, 7, 34, 1.61, 0.87, -1, 0, 12, 4, 0, 257.000, -1, 3, [0,2,3], 1.30],
		Md :[101, 7, 53, 1.60, 0.86, -1, 0, 12, 4, 0, 256.000, -1, 3, [0,2,3], 1.30],
		No :[102, 7, 63, 1.59, 0.85, -1, 0, 12, 4, 0, 254.000, -1, 3, [0,2,3], 1.30],
		Lr :[103, 7, 51, 1.58, 0.84, -1, 0, 12, 4, 0, 257.000, -1, 3, [0,3], 0.00], // electroneg not reported
		X  :[104, 0, 105, 0.0, 0.0, 0, 0, 4, 1, 0, 0.000, -1, 3, [], 0.00,[0.9, 0.3, 0.5]] // this is an R-group

	}
};

const AMINOACIDS =
{		
	code3 : ["ALA","CYS","ASP","GLU","PHE","GLY","HIS","ILE","LYS","LEU","MET","ASN","PRO",
	                   "GLN","ARG","SER","THR","VAL","TRP","TYR"],
	                   
	code1 : ["A","C","D","E","F","G","H","I","K","L","M","N","P","Q","R","S","T","V","W","Y"],
	
	HeavyAtomQty : 
				{
					ALA:5,CYS:6,ASP:8,GLU:9,PHE:11,GLY:4,HIS:10,ILE:8,LYS:9,LEU:8,MET:8,ASN:8,PRO:7,
	                   GLN:9,ARG:11,SER:6,THR:7,VAL:7,TRP:14,TYR:12
					
				},
	
	isAmino : function(group)
	{
		var type = group.type;
		if(containsKey(AMINOACIDS.code1,type))
		{
			return true;
		}
		else if(containsKey(AMINOACIDS.code3,type))
		{
			return true;
		}
		else 
		{
			return false;
		}
	},
		
	isUncanonicalAmino : function(group)
	{
		var type = group.type;
		if(AMINOACIDS.isAmino(type) == false)
		{
			return (hasAminoBackBone(group))
		}
		else
		{
			return true;
		}
	}
};